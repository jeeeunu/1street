<!DOCTYPE html>
<html lang="ko">
  <!-- include : head -->
  <%- include('includes/head') %>

  <body>
    <!-- include : preloder -->
    <%- include('includes/preloder') %>

    <!-- include : top-button -->
    <%- include('includes/top-button') %>

    <!-- include : header -->
    <%- include('includes/header') %>

    <!-- include : hero -->
    <%- include('includes/hero') %>

    <main class="product-list-page">
      <!-- 검색 정보 -->
      <section class="container search-info-container">
        <h2 class="search-info-title"><span>'바나나'</span>에 대한 검색결과</h2>
        <div class="search-list-wrap">
          <span>연관 검색어:</span>
          <ul class="search-keyword-list">
            <li>바나나 우유</li>
            <li>바나나 과일</li>
            <li>프리미엄 바나나</li>
          </ul>
        </div>
      </section>

      <!-- Featured Section Begin -->
      <section class="featured spad">
        <div class="container">
          <div class="btn-search-list">
            <button type="button" class="btn-serach-item active">랭킹순</button>
            <button type="button" class="btn-serach-item">낮은 가격순</button>
            <button type="button" class="btn-serach-item">높은 가격순</button>
            <button type="button" class="btn-serach-item">판매량순</button>
            <button type="button" class="btn-serach-item">최신순</button>
          </div>
          <div id="allProductsContainer" class="row featured__filter"></div>
        </div>
      </section>
      <!-- Featured Section End -->
    </main>
    <script>
      //-- 상품 전체보기 api --//
      let data = [];
      let cursor = null;
      let hasMoreData = true;

      const limit = 8;
      let isLoadingData = false; // 데이터 로딩 중인지 여부

      let lastScrollY = 0;

      const fetchData = async () => {
        if (!hasMoreData || isLoadingData) {
          return;
        }

        isLoadingData = true; // 데이터 로딩 중임을 표시

        const url = cursor
          ? `/products?limit=${limit}&cursor=${cursor}`
          : `/products?limit=${limit}`;

        try {
          const response = await fetch(url, {
            method: 'GET',
            headers: {
              Accept: 'application/json',
            },
          });

          const newData = await response.json();

          if (response.ok) {
            data = data.concat(newData);

            const allProductsContainer = document.querySelector(
              '#allProductsContainer',
            );
            newData.forEach((item) => {
              allProductsContainer.innerHTML += `
              <div class="col-lg-3 col-md-4 col-sm-6 mix category">
                <div class="featured__item">
                  <div
                    class="featured__item__pic set-bg"
                    style="background-image: url('${
                      item.product_image[0].url
                    }');"
                  >
                    <ul class="featured__item__pic__hover">
                      <li>
                        <a href="#"><i class="fa fa-heart"></i></a>
                      </li>
                      <li>
                        <a href="#"><i class="fa fa-shopping-cart"></i></a>
                      </li>
                    </ul>
                  </div>
                  <div class="featured__item__text">
                    <h6><a href="product-detail/${item.id}">${
                item.product_name
              }</a></h6>
                    <h5>${item.product_price.toLocaleString()}원</h5>
                  </div>
                </div>
              </div>
            `;
            });

            cursor = newData[newData.length - 1]?.id;

            if (newData.length < limit) {
              hasMoreData = false;
            }
          } else {
            alert(newData.message);
          }
        } catch (error) {
          console.error('에러 발생:', error);
          alert('데이터를 가져오는 데 실패했습니다.');
        }

        isLoadingData = false; // 데이터 로딩 완료 표시
      };

      fetchData();

      window.addEventListener('scroll', () => {
        const currentScrollY = window.scrollY;

        if (currentScrollY > lastScrollY) {
          const windowHeight = window.innerHeight;
          const documentHeight = document.body.scrollHeight;

          if (currentScrollY + windowHeight >= documentHeight - 10) {
            fetchData();
          }
        }

        lastScrollY = currentScrollY;
      });
    </script>
  </body>
</html>
