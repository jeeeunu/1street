<!DOCTYPE html>
<html lang="ko">
  <!-- include : head -->
  <%- include('includes/head') %>

  <body>
    <!-- include : top-button -->
    <%- include('includes/top-button') %>

    <!-- include : preloder -->
    <%- include('includes/preloder') %>

    <!-- include : header -->
    <%- include('includes/header') %>

    <!-- include : hero-normal -->
    <%- include('includes/hero') %>

    <!-- 내정보 (일반) -->
    <main class="mypage container mypage-info">
      <h2 class="title">마이페이지</h2>
      <div class="row">
        <aside class="col-lg-3">
          <div class="proflie-info-container">
            <div class="primary-img-wrap">
              <img src="<%- user.profile_image %> " alt="" />
            </div>
            <div class="text-wrap">
              <div class="name-wrap">
                <span><%- authUser.user_name %> 님</span>
                <a href="/my-page-user-edit"> >내 정보 수정</a>
              </div>
              <div>
                <span>충전금액: </span>
                <span><%- user.point %>원</span>
              </div>
              <div>
                <span>포인트: </span>
                <span><%- user.point %>원</span>
              </div>
              <div>
                <span>잔여 쿠폰: </span>
                <span>2개</span>
              </div>
            </div>
            <hr />
            <div class="provider-text">
              <% if (user.provider==="google" ) { %>
              <img
                src="https://cdn-icons-png.flaticon.com/512/2991/2991148.png"
                style="width: 15px; height: 15px; margin-right: 7px"
                alt=""
              />구글 로그인 <% } %>
            </div>
            <button
              type="button"
              class="gray-text btn-user-delete"
              onclick="deleteUser()"
            >
              회원 탈퇴
            </button>
          </div>
        </aside>

        <section class="col-lg-9">
          <section class="status-container">
            <ul class="status-list">
              <li class="status-item">
                <p>작성한 리뷰</p>
                <p>
                  <a href="/my-page/review-list">
                    <% if (user.review_count) { %> <%= user.review_count %> <% }
                    else { %> 0 <% } %> 건
                  </a>
                </p>
              </li>
              <li class="status-item">
                <p>좋아요한 상품</p>
                <p>
                  <a href="/like">
                    <% if (user.like_count) { %> <%= user.like_count %> <% }
                    else { %> 0 <% } %> 건
                  </a>
                </p>
              </li>
              <li class="status-item">
                <p>Q&A</p>
                <p>
                  <a
                    id="qnaLink"
                    href="/my-page-user-qna/<%= authUser.user_id %>"
                    ><%= qnaCount %> 건</a
                  >
                </p>
              </li>
              <li class="status-item">
                <p>장바구니</p>
                <p><a href=""> <%= carts.length %> 건 </a></p>
              </li>
            </ul>
          </section>

          <section class="list-container">
            <div class="title-wrap">
              <h3>
                최근 주문 내역
                <a id="order-count"> </a>
              </h3>

              <a href="">더보기</a>
            </div>
            <div class="order-list-table">
              <ul class="t-head">
                <li class="td">날짜</li>
                <li class="td">주문정보</li>
                <li class="td">상태</li>
                <li class="td">확인/신청</li>
              </ul>
              <ul class="t-body">
                <!-- <li class="tr">
                          <div class="td">
                            <p class="date-text">2023.01.01</p>
                          </div>
                          <div class="td">
                            <div class="order-info-wrap">
                              <div class="img-wrap">
                                <img
                                  src="https://i.namu.wiki/i/slmFMXb1Fchs2zN0ZGOzqfuPDvhRS-H9eBp7Gp613-DNKi6i6Ct7eFkTUpauqv5HAYR97mrNqrvvcCDEyBdL_g.webp"
                                  alt="" />
                              </div>
                              <div class="text-wrap">
                                <a href="">
                                  <span>20228284895894</span>
                                  <span class="product-title">텔레비전</span>
                                  <span>옵션1/2/3</span>
                                </a>
                              </div>
                            </div>
                          </div>
                          <div class="td status-wrap">
                            <span>배송완료</span>
                          </div>
                          <div class="td">
                             TODO :: 버튼 각 상황에 맞게 -->
                <!-- <button type="button" class="btn-primary-s">배송완료 확인</button>
                    </div>
                    </li> -->
              </ul>
            </div>
          </section>
        </section>
      </div>
    </main>

    <!-- include : footer -->
    <%- include('includes/footer') %>

    <script>
      //-- 유저 탈퇴 api --//
      const deleteUser = async () => {
        const firstConfirm = window.confirm('회원 탈퇴 하시겠습니까?');

        if (firstConfirm) {
          const secondConfirm = window.confirm(
            '다시 되돌릴 수 없습니다. 정말 탈퇴하시겠습니까?',
          );

          if (secondConfirm) {
            try {
              const response = await fetch('users', {
                method: 'DELETE',
              });

              const data = await response.json();

              if (response.ok) {
                alert(data.message);
                window.location.href = '/';
              } else {
                alert(data.message);
                console.error('회원 탈퇴중 오류가 발생했습니다.');
                window.location.href = '/';
              }
            } catch (error) {
              console.error('Error:', error);
              alert('오류가 발생했습니다.');
            }
          }
        }
      };

      fetchOrder();

      const orderListContainer = document.querySelector('.t-body');

      async function fetchOrder() {
        const orderCountElement = document.getElementById('order-count');
        try {
          const response = await fetch(`/orders`);
          if (response.ok) {
            const orders = await response.json();

            orders.sort((a, b) => {
              const dateA = new Date(a.created_at);
              const dateB = new Date(b.created_at);
              return dateB - dateA;
            });

            orderCountElement.textContent = `( ${orders.length} )`;

            // 모든 주문 상세 정보를 먼저 가져오기
            const orderDetailsPromises = orders.map(async (order) => {
              return await fetchOrderDetails(order.id);
            });

            const orderDetails = await Promise.all(orderDetailsPromises);

            // 정렬된 주문 목록을 기반으로 렌더링
            orders.forEach((order, index) => {
              renderOrder(order, orderDetails[index]);
            });
          } else {
            console.error('주문 내역을 가져오는 데 실패했습니다.');
          }
        } catch (error) {
          console.error('ERROR:', error);
        }
      }

      async function fetchOrderDetails(order_id) {
        try {
          const response = await fetch(`/orders/${order_id}`); // 주문 상세 정보를 가져오는 API 엔드포인트 URL을 적절히 변경하세요.
          if (response.ok) {
            return await response.json();
          } else {
            console.error('주문 상세 정보를 가져오는 데 실패했습니다.');
            return null;
          }
        } catch (error) {
          console.error('ERROR:', error);
          return null;
        }
      }

      function renderOrder(order, orderDetails) {
        // 주문 정보와 상세 정보를 이용하여 HTML을 생성하고 orderListContainer에 추가합니다.
        const orderItem = document.createElement('li');
        orderItem.classList.add('tr');

        // 주문 상태에 따른 버튼 HTML을 동적으로 생성
        let buttonHtml = '';
        if (order.order_status === 'OrderPending') {
          buttonHtml = `<button type="button" id="order_cancel_${order.id}" class="btn-primary-s">주문 취소</button>`;
        } else if (order.order_status === 'DeliveryComplete') {
          buttonHtml = `<button type="button" id="review_${orderDetails.id}" class="btn-primary-s" >리뷰 작성</button>`;
        } else if (order.order_status === 'OrderConfirm') {
          buttonHtml = `<button type="button" class="btn-primary-s">주문 확인중</button>`;
        } else if (order.order_status === 'OrderShipping') {
          buttonHtml = `<button type="button" class="btn-primary-s">배송 준비중</button>`;
        } else if (order.order_status === 'orderDelivering') {
          buttonHtml = `<button type="button" class="btn-primary-s">배송 중</button>`;
        }

        // 각 주문 디테일에 대한 HTML을 생성
        const productHtml = orderDetails.order_details
          .map((detail) => {
            return `
      <div class="img-container">
        <div class="img-wrap">
          <img src="${detail.product.product_image[0].url}" alt="" />
        </div>
        <div class="text-wrap">
          <a href="my-page-order/${order.id}">
            <span>${
              order.created_at.slice(0, 10).replace(/-/g, '') + order.id
            }</span>
            <div class="product-title">${detail.product.product_name}</div>
          </a>
        </div>
      </div>
    `;
          })
          .join('');

        // 버튼 HTML을 추가
        orderItem.innerHTML = `
    <div class="td">
      <p class="date-text">${order.created_at
        .slice(0, 10)
        .replace(/-/g, '.')}</p>
    </div>
    <div class="td">
      <div class="order-info-wrap">
        ${productHtml}
      </div>
    </div>
    <div class="td status-wrap">
      <span>${order.order_status}</span>
    </div>
    <div class="td">
      ${buttonHtml}
    </div>
  `;

        orderListContainer.appendChild(orderItem);

        //-- 리뷰 작성 페이지 이동 --//

        const reviewCBtn = document.getElementById(`review_${orderDetails.id}`);
        if (reviewCBtn) {
          reviewCBtn.addEventListener('click', async (event) => {
            window.location.href = `/my-page/create-review/${orderDetails.id}`;
          });
        }

        const orderCcBtn = document.getElementById(`order_cancel_${order.id}`);
        if (orderCcBtn) {
          orderCcBtn.addEventListener('click', async function cancelOrder() {
            try {
              const response = await fetch(`/orders/${order.id}/cancel`, {
                method: 'PATCH',
                headers: {
                  'Content-Type': 'application/json',
                },
              });
              const data = await response.json();
              if (response.ok) {
                console.log(data.message);
                alert('주문이 취소되었습니다.');
                window.location.reload();
              } else {
                console.log(data.message);
                alert(data.message);
              }
            } catch (err) {
              console.error('Error:', err);
            }
          });
        }
      }

      // 사용자의 user_id 가져오기
      const userId = '<%= authUser.user_id %>';
      const qnaLink = document.getElementById('qnaLink');
      qnaLink.addEventListener('click', (event) => {
        event.preventDefault(); // 기본 링크 동작 방지
        window.location.href = `/my-page-user-qna/${userId}`;
      });

      // Q&A 데이터를 가져오는 API 호출
      fetch(`/qnas/user/${userId}`)
        .then((response) => {
          if (response.ok) {
            return response.json();
          } else {
            throw new Error('Q&A 데이터를 가져오는데 실패했습니다.');
          }
        })
        .then((qnaData) => {
          // qnaData를 이용하여 Q&A 개수 계산
          const qnaCount = qnaData.length;

          // qnaCount를 HTML에 렌더링
          const qnaCountElement = document.querySelector('#qnaCount');
          if (qnaCountElement) {
            qnaCountElement.textContent = `${qnaCount}건`;
          }
        })
        .catch((error) => {
          console.error('Q&A 데이터를 가져오는 중 오류 발생: ', error);

          // 에러가 발생하면 qnaCount를 0으로 설정
          const qnaCountElement = document.querySelector('#qnaCount');
          if (qnaCountElement) {
            qnaCountElement.textContent = '0건';
          }
        });
    </script>
  </body>
</html>
